<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>.GCODE: Yazıcınız için talimatları içeren yazdırma dosyalarının biçimi.
.OBJ-.AMF: 3B modeller için kullanılan bir dosya formatı.
.STL: 3B modeller için yaygın olarak kullanılan bir dosya formatı.
3 Boyutlu Baskı: 3D baskı, bilgisayar ortamında bulunan dijital dosyaların fiziksel objelere
dönüştürülmesi işlemine verilen isimdir.
ABS: ABS(Acrylonitrile Butadiene Styrene), mukavemeti yüksek ve petrol bazlı bir termoplastiktir
Baskı Hızı Çarpanı: Yazıcı çalışırken ki baskı hızının orjinal hıza göre oranıdır.
Dahili Depolama: Dosyaları doğrudan yazıcıya göndermek ve yazdırma geçmişine erişmek için
kullanabileceğiniz Teira3D yerleşik depolamanın parçası.
Destek: PrusaSlicer'da destek seçeneğini etkinleştirme, bir baskının tek başına durmayacak herhangi
bir bölümünü desteklemek için kullanılan otomatik olarak oluşturulan destek yapıları.
Dilimleme Yazılımı: Dilimleme yazılımı, üç boyutlu nesneyi birçok yatay katmanda dilimlere ayırır ve bir
3D yazıcı kafasının satır satır, katman katman izleyebileceği yolları oluşturur.
Ekstruder: Ekstrüder, malzemeyi makaradan çeker, eritir ve bir memeden Yapı Yüzeyine iter.
Fan: Basınç farkı oluşturarak havanın akışını sağlayan cihazlardır.
FDM: Bilgisayar destekli bu tasarım verisini yazıcı okur ve işlem başlar. Termoplastik malzeme yazıcının
extruder diye adlandırılan bölgesinde ısıtılarak erimiş plastik olarak X ve Y koordinatlarında basılır.
Tabanın en altından başlayarak Z koordinatı boyunca katmanlar serilir. Serilen katmanlar birleşerek katı
formda bir model elde edilir.
FLEX: Plastik özelliklerine sahip Termoplastik Elastomer kullanılarak geliştirilmiş filament türüdür.
Filament: 3 boyutlu yazıcılarda parça üretmek için kullanılan ham maddedir.
Filament Sensörü: Filamentin ne zaman bittiğini algılayan ve yeniden yüklenene kadar yazdırma
işlemini duraklatan bir iş tasarrufu sensörü.
Isıtıcı Fişek: Boru kılıf içinde sıkıştırılmış tek yönlü elektrik çıkışı olan rezistans çeşididir
Katman teknolojisi: Malzemenin üstüne ince tabakalar halinde parçalar eklenmesiyle oluşan bir üretim
yöntemidir.
Kılavuz Tüp: Malzemeyi malzeme makarasından ekstrüdere ve ekstrüderden sıcak uca yönlendiren
plastik tüp.
LCD Ekran: Sıvı kristalli ekran olarak da çevrilebilen bir panel türüdür. Elektrik yardımıyla kutuplara
bölünen sıvı, ışığı tek yönlü bir şekilde geçirir hale gelir ve görüntü meydana çıkar.
Manyetik Baskı Tablası: Manyetik baskı tablası filamentlerin tablaya daha iyi yapışmasını sağlayan,
aynı zamanda manyetik yüzeye sahip olması ile kolayca sökülüp tekrar takılabilen, bükülebilir yapıya
sahip tabladır.
Nozül: Hotend'in ucundaki, ısıtılmış malzemenin Baskı yüzeyine yayılmak üzere çıktığı açıklık.
PLA: PLA (Polilaktik Asit) mısır nişastası bazlı bir çeşit bioplastiktir.
Set Değeri: Proses değerinin ulaşması istenen hedef değeri.
SD Kart: Baskı dosyalarını Teira3D Yazıcılara/Yazıcılardan aktarmak için bir SD Kart kullanabilirsiniz.
Yazdırma: Yazdırma, yazdırılmak üzere gönderilen bir dosyadır. Bu dosya, modelinizi PrusaSlicer ile
hazırlamanın sonucudur. Yazdırma işlerinin biçimi .Gcode'dur.</value>
  </data>
</root>